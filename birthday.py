from datetime import datetime, time, timedelta, date, timezone
import os, sys

path = os.path.abspath(os.path.dirname(sys.argv[0]))

Role = 905036152552161322
GirlRole = 908038006521348106
Channel = 907899975625768970
Greetings = ['–í —ç—Ç–æ—Ç –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π month2 –¥–µ–Ω—å –æ—Ç–º–µ—á–∞–µ—Ç —Å–≤–æ—ë age-–ª–µ—Ç–∏–µ user. –ü–æ–∂–µ–ª–∞–µ–º sex_d –∫—Ä–µ–ø–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è, —Å—á–∞—Å—Ç—å—è, –ª—é–±–≤–∏ –∏ –≤—Å–µ–≥–æ —Å–∞–º–æ–≥–æ —Å–∞–º–æ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ ü•≥', '–°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É user! –ñ–µ–ª–∞–µ–º sex_d –∫—Ä–µ–ø–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è, –ª—é–±–≤–∏, —É–¥–∞—á–∏ –∏ –∫–æ–Ω–µ—á–Ω–æ –∂–µ –¥–µ–Ω–µ–∂–Ω—ã—Ö stonks üí∏',\
'–†–æ–≤–Ω–æ age years –Ω–∞–∑–∞–¥ –ø–æ—è–≤–∏—Ç—å—Å—è_pst –Ω–∞ —Å–≤–µ—Ç user! –ü–æ–∑–¥—Ä–∞–≤–∏–º sex_v –∏ –ø–æ–∂–µ–ª–∞–µ–º –æ–≥—Ä–æ–º–Ω–µ–π—à–µ–≥–æ —Å—á–∞—Å—Ç—å—è, –∫—Ä–µ–ø–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è, –≤—Å–µ–ª–µ–Ω—Å–∫–æ–≥–æ —Ç–µ—Ä–ø–µ–Ω–∏—è, –Ω–∞–¥–µ–∂–Ω—ã—Ö –∏ –≤–µ—Ä–Ω—ã—Ö –¥—Ä—É–∑–µ–π üéä', '–î–æ –º–µ–Ω—è –¥–æ—à—ë–ª —Å–ª—É—Ö, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π_rod user!\n–°—Ä–æ—á–Ω–æ –≥–æ—Ç–æ–≤—å—Ç–µ —Ç–æ—Ä—Ç —Å age —Å–≤–µ—á–∫–æ–π_fnage –∏–ª–∏ —Ö–æ—Ç—è –±—ã age —Ç–æ—Ä—Ç_fnage —Å –æ–¥–Ω–æ–π —Å–≤–µ—á–∫–æ–π üéÇ',\
'*Happy birthday to you*\n*Happy birthday to yoouuuu...*\n–≠—Ç–∞ –ø–µ—Å–Ω—è –ø–æ—Å–≤—è—â–∞–µ—Ç—Å—è –Ω–∞—à–µ–º—É_rod –∏–º–µ–Ω–∏–Ω–Ω–∏–∫—É_rod user, –≤–µ–¥—å —Å–µ–≥–æ–¥–Ω—è sex_d –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è age –ª–µ—Ç! üéâ']
msk = timezone(offset=timedelta(hours=3), name='–ú–°–ö')
GirlsGIFs = []
NeutralGIFs = []
birthdays = {}
NameOfMonths = {
	1: ['—è–Ω–≤–∞—Ä—å', '—è–Ω–≤–∞—Ä—å—Å–∫–∏–π'],
	2: ['—Ñ–µ–≤—Ä–∞–ª—å', '—Ñ–µ–≤—Ä–∞–ª—å—Å–∫–∏–π'],
	3: ['–º–∞—Ä—Ç', '–º–∞—Ä—Ç–æ–≤—Å–∫–∏–π'],
	4: ['–∞–ø—Ä–µ–ª—å', '–∞–ø—Ä–µ–ª—å—Å–∫–∏–π'],
	5: ['–º–∞–π', '–º–∞–π—Å–∫–∏–π'],
	6: ['–∏—é–Ω—å', '–∏—é–Ω—å—Å–∫–∏–π'],
	7: ['–∏—é–ª—å', '–∏—é–ª—å—Å–∫–∏–π'],
	8: ['–∞–≤–≥—É—Å—Ç', '–∞–≤–≥—É—Å—Ç–æ–≤—Å–∫–∏–π'],
	9: ['—Å–µ–Ω—Ç—è–±—Ä—å', '—Å–µ–Ω—Ç—è–±—Ä—å—Å–∫–∏–π'],
	10: ['–æ–∫—Ç—è–±—Ä—å', '–æ–∫—Ç—è–±—Ä—å—Å–∫–∏–π'],
	11: ['–Ω–æ—è–±—Ä—å', '–Ω–æ—è–±—Ä—å—Å–∫–∏–π'],
	12: ['–¥–µ–∫–∞–±—Ä—å', '–¥–µ–∫–∞–±—Ä—å—Å–∫–∏–π'],
}

def days_left(birthday):
	today = datetime.now(tz=msk)
	today = date(day=today.day, year=today.year, month=today.month)
	birthday = date(year=today.year, month=birthday.month, day=birthday.day)
	if (birthday - today).days < 0:
		birthday = date(year=today.year + 1, month=birthday.month, day=birthday.day)
	return (birthday - today).days

def load_birthdays():
	with open(path + '/birthday/birthdays.txt') as data:
		for line in data:
			s = line.strip().split()
			t = date(year=int(s[1][:4:]), month=int(s[1][5:7:]), day=int(s[1][8::]))
			birthdays[int(s[0])] = t
	with open(path + '/birthday/girls_gifs.txt') as data:
		for line in data:
			GirlsGIFs.append(line.strip())
	with open(path + '/birthday/neutral_gifs.txt') as data:
		for line in data:
			NeutralGIFs.append(line.strip())

def save_birthdays():
	try:
		with open(path + '/birthday/birthdays.txt', mode='w') as data:
			for member in birthdays.items():
 				data.write(str(member[0]) + ' ' + str(member[1]) + '\n')
	except:
		print('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏')

def set_birthday(user_id, dat):
	if len(dat) != 10:
		raise ValueError('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è: –¥–ª–∏–Ω–∞ –¥–∞—Ç—ã != 10')
	try:
		birthdays[user_id] = date(year=int(dat[:4:]), month=int(dat[5:7:]), day=int(dat[8::]))
		save_birthdays()
	except:
		raise ValueError('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è')

def delete_birthday(user_id):
	birthdays.pop(user_id, 0)
	save_birthdays()

def next_birthdays():
	ans = {k: v for k, v in sorted(birthdays.items(), key=lambda item: days_left(item[1]))}
	for i in ans.keys():
		ans[i] = days_left(ans[i])
	if len(ans) <= 10:
		return ans
	else:
		i = 0
		nans = {}
		for k in ans.keys():
			if i == 10:
				break
			nans[k] = ans[k]
			i += 1
		return nans